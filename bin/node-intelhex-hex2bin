#!/usr/bin/env node

const program = require('commander');
const path = require('path');
const intelhex = require('../index');
const _ = require('lodash');
const fs = require('fs');
const IntelToBufferProcessor = require('../lib/IntelHexFileIn');

program
.option('-s, --select [blocks]', 'List of block addresses to select out of the file')
.arguments('hexFilePath binaryFilePath')
.parse( process.argv );

if( !program.args || program.args.length < 2 ){
	console.error('two arguments required');
	process.exit(1);
}

function readFileSync( inputPath ){
	var string = null;
	try{
		string = fs.readFileSync( inputPath, { encoding: 'utf8' });
	}catch( error ){
		console.log( "Could not read input file: ", error.message );
	}
	return string;
}

var options = {};

if( program.select ){
	const selectBlockArguments = program.select.split(',');
	const selectBlockAddresses = _.map( selectBlockArguments, function(s){ return parseInt(s); } );
	options.selectBlocks = selectBlockAddresses;
}

const inputPath = path.resolve( program.args[0] );
const outputPath = path.resolve( program.args[1] );


intelhex.intelHexFileToBinaryFile( inputPath, outputPath, options )
.then( function(){
	console.log('Done.');
})
.catch( function( error ){
	console.error('Failed to convert file. Terminating.');
	throw error;
});

console.log('Done.');

